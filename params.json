{"name":"FidelityWebDriver","tagline":"","body":"# Project Overview\r\nFidelityWebDriver is a wrapper around the Selenium WebDriver, used to perform semantic driving of the Fidelity website.\r\n\r\nCurrent build status: ![Build Status](http://sonnevillej.ddns.net:9000/app/rest/builds/buildType:(id:FidelityWebDriver_Build)/statusIcon)\r\n\r\nMuch of the demo app and library is still not functional, but login capability has been implemented. While I'm still building out the structure of the library, I am planning on accept pull requests in the future.\r\n\r\n## Demo app\r\n_This project depends on ChromeDriver, so be sure you have Chrome installed!_\r\n\r\nThe demo app will use the specified credentials to log into the www.Fidelity.com website and print some basic account info to the console.\r\n\r\n## Command line arguments\r\nComplie and run Sonneville.FidelityWebDriver.Demo.exe with any of the below parameters:\r\n```\r\n  -u, --username=VALUE       the username to use when logging into Fidelity.\r\n  -p, --password=VALUE       the password to use when logging into Fidelity.\r\n  -s, --save                 indicates options should be persisted.\r\n  -h, --help                 shows this message and exits.\r\n```\r\nIf the --save argument is given, settings are stored to [Isolated Storage](https://msdn.microsoft.com/en-us/library/3ak841sy(v=vs.110).aspx). Passwords are encrypted at rest.\r\n","google":"UA-65241025-1","note":"Don't delete this file! It's used internally to help with page regeneration."}